version: "3.9"

services:
  db:
    ports:
      - "5440:5432"
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: dsadsa 
      POSTGRES_USER : super

  dev:
    build: 
      context: .
      dockerfile: .devcontainer/Dockerfile
    depends_on:
      - db
    environment:
      - APP_NAME=todo
      - DB_NAME=todo
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=super
      - DB_PASSWORD=dsadsa
    volumes:
      - .:/workspace:cached
    command: sleep infinity
    network_mode: service:db

  api:
    restart: unless-stopped
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    depends_on:
      - db
    ports:
      - "3001:80"
    environment:
      - APP_NAME=todo
      - DB_NAME=todo
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=super
      - DB_PASSWORD=dsadsa
    volumes:
      - ./:/app/
    command: /start-reload.sh

  pytest:
    build: 
      dockerfile: Dockerfile
      context: .
      target: dev
    depends_on:
      - db
    environment:
      - APP_NAME=todo
      - DB_NAME=todo_test
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=super
      - DB_PASSWORD=dsadsa
      - ENVIRONMENT=testing
    volumes:
      - ./:/app/
    command: pytest


volumes:
  postgres:


name: Pull Request

on:
  pull_request:
    branches:
    - master
    
jobs:
  test:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Static Code Linting with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Unit Testing with pytest
        env:
          # add environment variables for tests
        run: |
          pytest